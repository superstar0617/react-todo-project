{"version":3,"sources":["functionBased/components/TodoItem.module.css","reportWebVitals.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoItem.js","functionBased/components/TodoList.js","functionBased/pages/SinglePage.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","item","checkbox","textInput","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Header","react_default","a","createElement","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","_useState","useState","title","_useState2","Object","slicedToArray","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","objectSpread","defineProperty","target","esm","Provider","index_esm","TodoItem","editing","setEditing","_props$todo","todo","completed","id","viewMode","editMode","display","useEffect","console","log","styles","onDoubleClick","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","setUpdate","onKeyDown","event","key","TodoList","todos","map","components_TodoItem","SinglePage","slug","useParams","aboutContent","description","find","About","_useRouteMatch","useRouteMatch","url","path","react_router_dom","to","concat","react_router","pages_SinglePage","NotMatch","Navbar","navbarOpen","setNavbarOpen","md_index_esm","width","height","fi_index_esm","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","Fragment","components_Navbar","components_Header","components_InputTodo","newTodo","uuidv4","toConsumableArray","components_TodoList","prevState","filter","updateTitle","pages_About","pages_NotMatch","ReactDOM","render","StrictMode","components_TodoContainer","document","getElementById"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,uBAAAC,SAAA,2BAAAC,UAAA,wLCWHC,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,8BCoBCY,EAzBA,WAOX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,MANQ,CAChBC,QAAS,SACTC,WAAY,UAKRL,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CACHG,SAAU,OACVC,WAAY,MACZC,aAAc,OACdH,WAAY,MACZI,MAAO,UACPC,cAAe,YACfC,UAAW,WAPnB,kCC2CGC,EAlDG,SAAAC,GAAS,IAAAC,EAEWC,mBAAS,CACvCC,MAAO,KAHYC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEhBM,EAFgBH,EAAA,GAELI,EAFKJ,EAAA,GAyBvB,OACIjB,EAAAC,EAAAC,cAAA,QAAMoB,SAbW,SAAAhC,GACjBA,EAAEiC,iBACCH,EAAUJ,MAAMQ,QACfX,EAAMY,aAAaL,EAAUJ,OAC7BK,EAAa,CACTL,MAAO,MAGXU,MAAM,sBAKoBC,UAAU,kBACpC3B,EAAAC,EAAAC,cAAA,SACI0B,KAAK,OACLD,UAAU,aACVE,YAAY,cACZC,MAAOV,EAAUJ,MACjBe,KAAK,QACLC,SA3BK,SAAA1C,GACb+B,EAAaH,OAAAe,EAAA,EAAAf,CAAA,GACNE,EADKF,OAAAgB,EAAA,EAAAhB,CAAA,GAEP5B,EAAE6C,OAAOJ,KAAOzC,EAAE6C,OAAOL,YA0B1B9B,EAAAC,EAAAC,cAACkC,EAAA,EAAYC,SAAb,CACIP,MAAO,CACHrB,MAAO,WACPN,MAAO,CAACG,SAAU,OAAQG,MAAO,YACjCkB,UAAW,iBAGf3B,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,gBACd3B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,2BCsBLC,EAjEE,SAAA1B,GAAS,IAAAC,EACQC,oBAAS,GADjBE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACf0B,EADevB,EAAA,GACNwB,EADMxB,EAAA,GAAAyB,EAoBS7B,EAAM8B,KAA9BC,EApBeF,EAoBfE,UAAWC,EApBIH,EAoBJG,GAAI7B,EApBA0B,EAoBA1B,MAElB8B,EAAW,GACXC,EAAW,GAcf,OAZGP,EACCM,EAASE,QAAU,OAEnBD,EAASC,QAAU,OAGvBC,oBAAU,WACN,OAAO,WACHC,QAAQC,IAAI,oBAEjB,IAGCnD,EAAAC,EAAAC,cAAA,MAAIyB,UAAWyB,IAAOrE,MAClBiB,EAAAC,EAAAC,cAAA,OAAKmD,cApCS,WAClBZ,GAAW,IAmC4BtC,MAAO2C,GACtC9C,EAAAC,EAAAC,cAAA,SACI0B,KAAK,WACLD,UAAWyB,IAAOpE,SAClBsE,QAASV,EACTZ,SAAU,kBAAMnB,EAAM0C,kBAAkBV,MAE5C7C,EAAAC,EAAAC,cAAA,UAAQsD,QAAS,kBAAM3C,EAAM4C,gBAAgBZ,KACzC7C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAASnC,MAAO,CAACM,MAAO,YAAaH,SAAS,WAElDN,EAAAC,EAAAC,cAAA,QAAMC,MAAOyC,EApCF,CACnBc,UAAW,SACXjD,MAAO,UACPkD,QAAS,GACTC,eAAgB,gBAgCkC,MAAO5C,IAErDhB,EAAAC,EAAAC,cAAA,SACI0B,KAAK,OACLzB,MAAO4C,EACPpB,UAAWyB,IAAOnE,UAClB6C,MAAOd,EACPgB,SAAU,SAAA1C,GACNuB,EAAMgD,UAAUvE,EAAE6C,OAAOL,MAAOe,IAEpCiB,UApDa,SAAAC,GACJ,UAAdA,EAAMC,KACLvB,GAAW,QCMRwB,EAhBE,SAAApD,GACb,OACIb,EAAAC,EAAAC,cAAA,UACKW,EAAMqD,MAAMC,IAAI,SAAAxB,GAAI,OACjB3C,EAAAC,EAAAC,cAACkE,EAAD,CACIJ,IAAKrB,EAAKE,GACVF,KAAMA,EACNY,kBAAmB1C,EAAM0C,kBACzBE,gBAAiB5C,EAAM4C,gBACvBI,UAAWhD,EAAMgD,sCCmBtBQ,EA5BI,WAEf,IAeUC,EAASC,cAATD,KACFE,EAhBU,CACd,CACEF,KAAM,YACNtD,MAAO,gBACPyD,YACE,0TAEJ,CACEH,KAAM,eACNtD,MAAO,mBACPyD,YACE,sLAKyBC,KAAK,SAAA3F,GAAI,OAAIA,EAAKuF,OAASA,IAClDtD,EAAuBwD,EAAvBxD,MAAOyD,EAAgBD,EAAhBC,YACjB,OACIzE,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,iBACX3B,EAAAC,EAAAC,cAAA,UAAKc,GACLhB,EAAAC,EAAAC,cAAA,SAAIuE,KCJDE,EAlBD,WAAM,IAAAC,EACMC,cAAdC,EADQF,EACRE,IAAKC,EADGH,EACHG,KACb,OACI/E,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBACX3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,eACV3B,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAMC,GAAE,GAAAC,OAAKJ,EAAL,eAAR,cAEJ9E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAMC,GAAE,GAAAC,OAAKJ,EAAL,kBAAR,kBAGR9E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOJ,KAAI,GAAAG,OAAKH,EAAL,WACP/E,EAAAC,EAAAC,cAACkF,EAAD,SCPDC,EARE,WACb,OACIrF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uDCqDGoF,EArDA,WACX,IADiBxE,EAcmBC,oBAAS,GAd5BE,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAcVyE,EAdUtE,EAAA,GAcEuE,EAdFvE,EAAA,GAwBjB,OACIjB,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,UACX3B,EAAAC,EAAAC,cAAA,UAAQsD,QAVK,WACjBgC,GAAeD,KAUNA,EACGvF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAStF,MAAO,CAAEM,MAAO,OAAQiF,MAAO,OAAQC,OAAQ,UAExD3F,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAQzF,MAAO,CAAEM,MAAO,UAAWiF,MAAO,OAAQC,OAAQ,WAGlE3F,EAAAC,EAAAC,cAAA,MAAIyB,UAAS,WAAAuD,OAAaK,EAAa,WAAa,KAhC9C,CACV,CACI1C,GAAI,EACJkC,KAAM,IACNc,KAAM,QAEV,CACIhD,GAAG,EACHkC,KAAM,SACNc,KAAM,UAwBK1B,IAAI,SAAA2B,GACP,OACI9F,EAAAC,EAAAC,cAAA,MAAI8D,IAAK8B,EAAKjD,IACV7C,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CACIC,GAAIa,EAAKf,KACTgB,gBAAgB,cAChBvC,QAAS,WAnBjCgC,GAAc,IAoBUQ,OAAK,GAEJF,EAAKD,YC0DvBI,EAhGO,WAAM,IAAAnF,EACEC,mBAuD1B,WACI,IAAMmF,EAAOC,aAAaC,QAAQ,SAElC,OADmBC,KAAKC,MAAMJ,IACT,GA1DUK,IADXtF,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACjBoD,EADiBjD,EAAA,GACVuF,EADUvF,EAAA,GAmExB,OALAgC,oBAAU,WACN,IAAMiD,EAAOG,KAAKI,UAAUvC,GAC5BiC,aAAaO,QAAQ,QAASR,IAC/B,CAAChC,IAGAlE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0G,SAAA,KACI3G,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACInF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOa,OAAK,EAACjB,KAAK,KACd/E,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACX3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,SACX3B,EAAAC,EAAAC,cAAC2G,EAAD,MACA7G,EAAAC,EAAAC,cAAC4G,EAAD,CAAWrF,aAlDf,SAAAT,GAChB,IAAM+F,EAAU,CACZlE,GAAImE,cACJhG,MAAOA,EACP4B,WAAW,GAEf4D,EAAQ,GAAAtB,OAAAhE,OAAA+F,EAAA,EAAA/F,CAAKgD,GAAL,CAAY6C,QA6CA/G,EAAAC,EAAAC,cAACgH,EAAD,CACIhD,MAAOA,EACPX,kBA3EP,SAAAV,GAChB2D,EAAS,SAAAW,GAAS,OACfA,EAAUhD,IAAI,SAAAxB,GACV,OAAGA,EAAKE,KAAOA,EACJ3B,OAAAe,EAAA,EAAAf,CAAA,GACAyB,EADP,CAEIC,WAAYD,EAAKC,YAGlBD,OAmESc,gBA9DZ,SAAAZ,GACZ2D,EAAStF,OAAA+F,EAAA,EAAA/F,CACFgD,EAAMkD,OAAO,SAAAzE,GACZ,OAAOA,EAAKE,KAAOA,OA4DHgB,UA9CV,SAACwD,EAAaxE,GAC5B2D,EACItC,EAAMC,IAAI,SAAAxB,GAIN,OAHGA,EAAKE,KAAOA,IACXF,EAAK3B,MAAQqG,GAEV1E,WA6CP3C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOJ,KAAK,UACR/E,EAAAC,EAAAC,cAACoH,EAAD,OAEJtH,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOJ,KAAK,KACR/E,EAAAC,EAAAC,cAACqH,EAAD,gBCxFpBC,IAASC,OACPzH,EAAAC,EAAAC,cAACF,EAAAC,EAAMyH,WAAP,KACE1H,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAACyH,EAAD,QAGJC,SAASC,eAAe,SAM1B3I","file":"static/js/main.608d1a3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1tmqf\",\"checkbox\":\"TodoItem_checkbox__YnlLf\",\"textInput\":\"TodoItem_textInput___UHbo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n\r\n    const headerStyle = {\r\n        padding: \"20px 0\",\r\n        lineHeight: \"1.5em\",\r\n    }\r\n\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1 style={{\r\n                    fontSize: \"6rem\",\r\n                    fontWeight: \"600\",\r\n                    marginBottom: \"2rem\",\r\n                    lineHeight: \"1em\",\r\n                    color: \"#ececec\",\r\n                    textTransform: \"lowercase\",\r\n                    textAlign: \"center\"\r\n                }}\r\n            >\r\n                todos\r\n            </h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst InputTodo = props => {\r\n    \r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n    });\r\n\r\n    const onChange = e => {\r\n        setInputText({\r\n            ...inputText,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(inputText.title.trim()){\r\n            props.addTodoProps(inputText.title);\r\n            setInputText({\r\n                title: \"\",\r\n            })\r\n        } else {\r\n            alert(\"Please write item\")\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"form-container\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input-text\"\r\n                placeholder=\"Add todo...\"\r\n                value={inputText.title}\r\n                name=\"title\"\r\n                onChange={onChange}\r\n            />\r\n            <IconContext.Provider\r\n                value={{\r\n                    color: \"darkcyan\",\r\n                    style: {fontSize: \"20px\", color: \"darkcyan\"},\r\n                    className: \"submit-iconn\",\r\n                }}\r\n            >\r\n                <button className=\"input-submit\">\r\n                    <FaPlusCircle />\r\n                </button>\r\n            </IconContext.Provider>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default InputTodo;","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./TodoItem.module.css\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\n\r\nconst TodoItem = props => {\r\n    const [editing, setEditing] = useState(false);\r\n\r\n    const handleEditing = () => {\r\n        setEditing(true);\r\n    }\r\n\r\n    const handleUpdateDone = event => {\r\n        if(event.key === \"Enter\") {\r\n            setEditing(false);\r\n        }\r\n    }\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#595959\",\r\n        opacity: 0.4,\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    const {completed, id, title} = props.todo;\r\n\r\n    let viewMode = {}\r\n    let editMode = {}\r\n\r\n    if(editing) {\r\n        viewMode.display = \"none\"\r\n    } else {\r\n        editMode.display = \"none\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log(\"Cleaning up...\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <li className={styles.item}>\r\n            <div onDoubleClick={handleEditing} style={viewMode}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className={styles.checkbox}\r\n                    checked={completed}\r\n                    onChange={() => props.handleChangeProps(id)}\r\n                />\r\n                <button onClick={() => props.deleteTodoProps(id)}>\r\n                    <FaTrash style={{color: \"orangered\", fontSize:\"16px\"}}/>\r\n                </button>\r\n                <span style={completed ? completedStyle : null}>{title}</span>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                style={editMode}\r\n                className={styles.textInput}\r\n                value={title}\r\n                onChange={e => {\r\n                    props.setUpdate(e.target.value, id)\r\n                }}\r\n                onKeyDown={handleUpdateDone}\r\n            />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = props => {\r\n    return (\r\n        <ul>\r\n            {props.todos.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleChangeProps={props.handleChangeProps}\r\n                    deleteTodoProps={props.deleteTodoProps}\r\n                    setUpdate={props.setUpdate}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SinglePage = () => {\r\n    // console.log(useParams())\r\n    const aboutData = [\r\n        {\r\n          slug: \"about-app\",\r\n          title: \"About the App\",\r\n          description:\r\n            \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n          slug: \"about-author\",\r\n          title: \"About the Author\",\r\n          description:\r\n            \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n        },\r\n      ]\r\n\r\n      const { slug } = useParams()\r\n      const aboutContent = aboutData.find(item => item.slug === slug)\r\n      const { title, description } = aboutContent\r\n    return (\r\n        <div className=\"main__content\">\r\n            <h1>{title}</h1>\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePage;","import React from \"react\";\r\nimport { Link, useRouteMatch, Route } from \"react-router-dom\";\r\nimport SinglePage from \"./SinglePage\";\r\n\r\nconst About = () => {\r\n    const { url, path } = useRouteMatch();\r\n    return (\r\n        <div className=\"about__content\">\r\n            <ul className=\"about__list\">\r\n                <li>\r\n                    <Link to={`${url}/about-app`}>About App</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${url}/about-author`}>About Author</Link>\r\n                </li>\r\n            </ul>\r\n            <Route path={`${path}/:slug`}>\r\n                <SinglePage />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import React from \"react\";\r\n\r\nconst NotMatch = () => {\r\n    return (\r\n        <div>\r\n            <h3>Not match for this page</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotMatch;","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\n\r\nconst Navbar = () => {\r\n    const links = [\r\n        {\r\n            id: 1,\r\n            path: \"/\",\r\n            text: \"Home\",\r\n        },\r\n        {\r\n            id:2,\r\n            path: \"/about\",\r\n            text: \"About\",\r\n        },\r\n    ]\r\n\r\n    const [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setNavbarOpen(!navbarOpen)\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        setNavbarOpen(false)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <button onClick={handleToggle}>\r\n                {navbarOpen ? (\r\n                    <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />\r\n                    ) : (\r\n                    <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\r\n                )}\r\n            </button>\r\n            <ul className={`menuNav ${navbarOpen ? \"showMenu\" : \"\"}`}>\r\n                {links.map(link => {\r\n                    return (\r\n                        <li key={link.id}>\r\n                            <NavLink\r\n                                to={link.path}\r\n                                activeClassName=\"active-link\"\r\n                                onClick={() => closeMenu()}\r\n                                exact\r\n                            >\r\n                                {link.text}\r\n                            </NavLink>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport TodoList from \"./TodoList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Route, Switch} from \"react-router-dom\";\r\nimport About from \"../pages/About\";\r\nimport NotMatch from \"../pages/NotMatch\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst TodoContainer = () => {\r\n    const [todos, setTodos] = useState(getInitialTodos());\r\n\r\n    const handleChange = id => {\r\n         setTodos(prevState =>\r\n            prevState.map(todo => {\r\n                if(todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed,\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    const delTodo = id => {\r\n        setTodos([\r\n            ...todos.filter(todo => {\r\n                return todo.id !== id\r\n            }),\r\n        ])\r\n    }\r\n\r\n    const addTodoItem = title => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false,\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n\r\n    const setUpdate = (updateTitle, id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if(todo.id === id){\r\n                    todo.title = updateTitle\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"test run\");\r\n\r\n    //     const temp = localStorage.getItem(\"todos\");\r\n    //     const loadedTodos = JSON.parse(temp);\r\n        \r\n    //     if(loadedTodos) {\r\n    //         setTodos(loadedTodos)\r\n    //     }\r\n    // }, [setTodos])\r\n\r\n    function getInitialTodos() {\r\n        const temp = localStorage.getItem(\"todos\");\r\n        const savedTodos = JSON.parse(temp);\r\n        return savedTodos || []\r\n    }\r\n\r\n    useEffect(() => {\r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n    }, [todos])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <div className=\"container\">\r\n                        <div className=\"inner\">\r\n                            <Header />\r\n                            <InputTodo addTodoProps={addTodoItem} />\r\n                            <TodoList\r\n                                todos={todos}\r\n                                handleChangeProps={handleChange}\r\n                                deleteTodoProps={delTodo}\r\n                                setUpdate={setUpdate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <NotMatch />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport TodoContainer from './functionBased/components/TodoContainer'\n\nimport './functionBased/App.css';\nimport { HashRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}